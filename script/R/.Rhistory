velocity <- cbind(velocity, as.data.frame(ioi[,3]))
velocity_seq <- cbind(velocity_seq, as.data.frame(velocity_seq[,4]))
velocity_acc_seq <- cbind(velocity_acc_seq, as.data.frame(velocity_seq[,4]))
View(velocity_acc_seq)
# Create a dataframe for a velocity profile
df_velocity <- df %>% dplyr::filter(Key_OnOff == 1)
df_velocity$Acc <- diff(c(0, df_velocity$Velocity))
# Assign a sequence number for each tone
df_velocity$Note <- rep(1:51, length(df_velocity$NoteNr)/51)
# Remove irrelevant tones
df_analysis2 <- df_velocity %>% dplyr::filter(Note != 25 & Note != 26 & Note != 51)
# Descriptive stats
velocity <- aggregate(Velocity~Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_seq <- aggregate(Velocity~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_acc_seq <- aggregate(Acc~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
View(velocity_acc_seq)
# Aggregated data
velocity <- cbind(velocity, as.data.frame(ioi[,3]))
velocity_seq <- cbind(velocity_seq, as.data.frame(velocity_seq[,4]))
velocity_acc_seq <- cbind(velocity_acc_seq, as.data.frame(velocity_seq[,4]))
View(velocity_acc_seq)
View(velocity_seq)
# Create a dataframe for a velocity profile
df_velocity <- df %>% dplyr::filter(Key_OnOff == 1)
df_velocity$Acc <- diff(c(0, df_velocity$Velocity))
# Assign a sequence number for each tone
df_velocity$Note <- rep(1:51, length(df_velocity$NoteNr)/51)
# Remove irrelevant tones
df_analysis2 <- df_velocity %>% dplyr::filter(Note != 25 & Note != 26 & Note != 51)
# Descriptive stats
velocity <- aggregate(Velocity~Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_seq <- aggregate(Velocity~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_acc_seq <- aggregate(Acc~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
# Aggregated data
velocity <- cbind(velocity, as.data.frame(ioi[,3]))
velocity_seq <- cbind(velocity_seq, as.data.frame(velocity_seq[,4]))
velocity_acc_seq <- cbind(velocity_acc_seq, as.data.frame(velocity_acc_seq[,4]))
# Add a grouping name
for (i in 1:length(ls_grouping[[1]])){
for (j in 1:length(ls_grouping[[2]])){
velocity_seq$Grouping[velocity_seq$Condition == ls_grouping[[1]][i] & velocity_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
velocity_acc_seq$Grouping[velocity_acc_seq$Condition == ls_grouping[[1]][i] & velocity_acc_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
}
}
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05))
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05))
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) + labs(y = "Velocity")
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) + labs(y = "Velocity")
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,51,1))
plot_velocity_seq
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") +  + scale_x_continuous(breaks=seq(1,50,1))
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping)) +
geom_line() + geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping, colour = Grouping)) +
geom_line() + geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
rm(list=ls(all=TRUE))
#!/usr/bin/Rscript
#rm(list=ls(all=TRUE)) - clear all in Environment
#ctrl+shift+C - comment out a block of code
# Install and load required packages
if (!require("dplyr")) {install.packages("dplyr"); require("dplyr")}
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
####################################
# Reading and formatting data
####################################
df <- read.csv('data_analysis.csv', header = T, sep = ",", dec = '.')
df$SubNr <- as.factor(df$SubNr)
####################################
# Interonset intervals
####################################
# Calculate IOIs
df_ioi <- df %>% dplyr::filter(Key_OnOff == 1)
df_ioi$IOI <- diff(c(0, df_onset$TimeStamp))
# Detect the first note and remove them
df_ioi$FirstNote <- 0
df_ioi$FirstNote[df_ioi$IOI > 5000 | df_ioi$IOI < 0] <- 1
df_ioi <- df_ioi %>% dplyr::filter(FirstNote != 1)
# Assign a sequence number for each tone
df_ioi$Note <- rep(1:50, length(df_ioi$NoteNr)/50)
# Remove irrelevant tones
df_analysis1 <- df_ioi %>% dplyr::filter(Note != 24 & Note != 25 & Note != 26 & Note != 50)
# Aggregated data
ioi <- aggregate(IOI~Condition*Skill, data = df_analysis1, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
ioi_seq <- aggregate(IOI~Note*Condition*Skill, data = df_analysis1, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
# Descriptive stats
ioi <- cbind(ioi, as.data.frame(ioi[,3]))
ioi_seq <- cbind(ioi_seq, as.data.frame(ioi_seq[,4]))
# Add a grouping name
ls_grouping <- list(c('Performing', 'Teaching'), c('articulation', 'tempoChange'))
for (i in 1:length(ls_grouping[[1]])){
for (j in 1:length(ls_grouping[[2]])){
ioi_seq$Grouping[ioi_seq$Condition == ls_grouping[[1]][i] & ioi_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
}
}
####################################
# IOIs plots
####################################
plot_ioi <- ggplot(data = ioi, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) +
coord_cartesian(ylim = c(150, 210)) + labs(y = "Mean IOI (ms)")
plot_ioi_seq <- ggplot(data = ioi_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
ggsave('plot_ioi.png', plot = plot_ioi, dpi = 300, width = 15, height = 12)
ggsave('plot_ioi_seq.png', plot = plot_ioi_seq, dpi = 300, width = 15, height = 4)
####################################
# Velocity
####################################
# Create a dataframe for a velocity profile
df_velocity <- df %>% dplyr::filter(Key_OnOff == 1)
df_velocity$Acc <- diff(c(0, df_velocity$Velocity))
# Assign a sequence number for each tone
df_velocity$Note <- rep(1:51, length(df_velocity$NoteNr)/51)
# Remove irrelevant tones
df_analysis2 <- df_velocity %>% dplyr::filter(Note != 25 & Note != 26 & Note != 51)
# Descriptive stats
velocity <- aggregate(Velocity~Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_seq <- aggregate(Velocity~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_acc_seq <- aggregate(Acc~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
# Aggregated data
velocity <- cbind(velocity, as.data.frame(velocity[,3]))
velocity_seq <- cbind(velocity_seq, as.data.frame(velocity_seq[,4]))
velocity_acc_seq <- cbind(velocity_acc_seq, as.data.frame(velocity_acc_seq[,4]))
# Add a grouping name
for (i in 1:length(ls_grouping[[1]])){
for (j in 1:length(ls_grouping[[2]])){
velocity_seq$Grouping[velocity_seq$Condition == ls_grouping[[1]][i] & velocity_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
velocity_acc_seq$Grouping[velocity_acc_seq$Condition == ls_grouping[[1]][i] & velocity_acc_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
}
}
####################################
# Velocity plots
####################################
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping, colour = Grouping)) +
geom_line() + geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
####################################
# Articulation values
####################################
####################################
# Articulation plots
####################################
#!/usr/bin/Rscript
#rm(list=ls(all=TRUE)) - clear all in Environment
#ctrl+shift+C - comment out a block of code
# Install and load required packages
if (!require("dplyr")) {install.packages("dplyr"); require("dplyr")}
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
####################################
# Reading and formatting data
####################################
df <- read.csv('data_analysis.csv', header = T, sep = ",", dec = '.')
df$SubNr <- as.factor(df$SubNr)
####################################
# Interonset intervals
####################################
# Calculate IOIs
df_ioi <- df %>% dplyr::filter(Key_OnOff == 1)
df_ioi$IOI <- diff(c(0, df_onset$TimeStamp))
# Detect the first note and remove them
df_ioi$FirstNote <- 0
df_ioi$FirstNote[df_ioi$IOI > 5000 | df_ioi$IOI < 0] <- 1
df_ioi <- df_ioi %>% dplyr::filter(FirstNote != 1)
# Assign a sequence number for each tone
df_ioi$Note <- rep(1:50, length(df_ioi$NoteNr)/50)
# Remove irrelevant tones
df_analysis1 <- df_ioi %>% dplyr::filter(Note != 24 & Note != 25 & Note != 26 & Note != 50)
# Aggregated data
ioi <- aggregate(IOI~Condition*Skill, data = df_analysis1, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
ioi_seq <- aggregate(IOI~Note*Condition*Skill, data = df_analysis1, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
# Descriptive stats
ioi <- cbind(ioi, as.data.frame(ioi[,3]))
ioi_seq <- cbind(ioi_seq, as.data.frame(ioi_seq[,4]))
# Add a grouping name
ls_grouping <- list(c('Performing', 'Teaching'), c('articulation', 'tempoChange'))
for (i in 1:length(ls_grouping[[1]])){
for (j in 1:length(ls_grouping[[2]])){
ioi_seq$Grouping[ioi_seq$Condition == ls_grouping[[1]][i] & ioi_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
}
}
####################################
# IOIs plots
####################################
plot_ioi <- ggplot(data = ioi, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) +
coord_cartesian(ylim = c(150, 210)) + labs(y = "Mean IOI (ms)")
plot_ioi_seq <- ggplot(data = ioi_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
ggsave('plot_ioi.png', plot = plot_ioi, dpi = 300, width = 15, height = 12)
ggsave('plot_ioi_seq.png', plot = plot_ioi_seq, dpi = 300, width = 15, height = 4)
####################################
# Velocity
####################################
# Create a dataframe for a velocity profile
df_velocity <- df %>% dplyr::filter(Key_OnOff == 1)
df_velocity$Acc <- diff(c(0, df_velocity$Velocity))
# Assign a sequence number for each tone
df_velocity$Note <- rep(1:51, length(df_velocity$NoteNr)/51)
# Remove irrelevant tones
df_analysis2 <- df_velocity %>% dplyr::filter(Note != 25 & Note != 26 & Note != 51)
# Descriptive stats
velocity <- aggregate(Velocity~Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_seq <- aggregate(Velocity~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_acc_seq <- aggregate(Acc~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
# Aggregated data
velocity <- cbind(velocity, as.data.frame(velocity[,3]))
velocity_seq <- cbind(velocity_seq, as.data.frame(velocity_seq[,4]))
velocity_acc_seq <- cbind(velocity_acc_seq, as.data.frame(velocity_acc_seq[,4]))
# Add a grouping name
for (i in 1:length(ls_grouping[[1]])){
for (j in 1:length(ls_grouping[[2]])){
velocity_seq$Grouping[velocity_seq$Condition == ls_grouping[[1]][i] & velocity_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
velocity_acc_seq$Grouping[velocity_acc_seq$Condition == ls_grouping[[1]][i] & velocity_acc_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
}
}
####################################
# Velocity plots
####################################
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping, colour = Grouping)) +
geom_line() + geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
####################################
# Articulation values
####################################
####################################
# Articulation plots
####################################
ioi <- aggregate(IOI~Condition*Skill, data = df_analysis1, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
# Remove irrelevant tones
df_analysis1 <- df_ioi %>% dplyr::filter(Note != 24 & Note != 25 & Note != 26 & Note != 50)
# Assign a sequence number for each tone
df_ioi$Note <- rep(1:50, length(df_ioi$NoteNr)/50)
# Detect the first note and remove them
df_ioi$FirstNote <- 0
df_ioi$FirstNote[df_ioi$IOI > 5000 | df_ioi$IOI < 0] <- 1
df_ioi <- df_ioi %>% dplyr::filter(FirstNote != 1)
# Assign a sequence number for each tone
df_ioi$Note <- rep(1:50, length(df_ioi$NoteNr)/50)
df_ioi <- df %>% dplyr::filter(Key_OnOff == 1)
df_ioi$IOI <- diff(c(0, df_onset$TimeStamp))
rm(list=ls(all=TRUE))
#!/usr/bin/Rscript
#rm(list=ls(all=TRUE)) - clear all in Environment
#ctrl+shift+C - comment out a block of code
# Install and load required packages
if (!require("dplyr")) {install.packages("dplyr"); require("dplyr")}
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
####################################
# Reading and formatting data
####################################
df <- read.csv('data_analysis.csv', header = T, sep = ",", dec = '.')
df$SubNr <- as.factor(df$SubNr)
####################################
# Interonset intervals
####################################
# Calculate IOIs
df_ioi <- df %>% dplyr::filter(Key_OnOff == 1)
df_ioi$IOI <- diff(c(0, df_ioi$TimeStamp))
# Detect the first note and remove them
df_ioi$FirstNote <- 0
df_ioi$FirstNote[df_ioi$IOI > 5000 | df_ioi$IOI < 0] <- 1
df_ioi <- df_ioi %>% dplyr::filter(FirstNote != 1)
# Assign a sequence number for each tone
df_ioi$Note <- rep(1:50, length(df_ioi$NoteNr)/50)
# Remove irrelevant tones
df_analysis1 <- df_ioi %>% dplyr::filter(Note != 24 & Note != 25 & Note != 26 & Note != 50)
# Aggregated data
ioi <- aggregate(IOI~Condition*Skill, data = df_analysis1, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
ioi_seq <- aggregate(IOI~Note*Condition*Skill, data = df_analysis1, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
# Descriptive stats
ioi <- cbind(ioi, as.data.frame(ioi[,3]))
ioi_seq <- cbind(ioi_seq, as.data.frame(ioi_seq[,4]))
# Add a grouping name
ls_grouping <- list(c('Performing', 'Teaching'), c('articulation', 'tempoChange'))
for (i in 1:length(ls_grouping[[1]])){
for (j in 1:length(ls_grouping[[2]])){
ioi_seq$Grouping[ioi_seq$Condition == ls_grouping[[1]][i] & ioi_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
}
}
####################################
# IOIs plots
####################################
plot_ioi <- ggplot(data = ioi, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) +
coord_cartesian(ylim = c(150, 210)) + labs(y = "Mean IOI (ms)")
plot_ioi_seq <- ggplot(data = ioi_seq, aes(x = Note, y = mean, group = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
ggsave('plot_ioi.png', plot = plot_ioi, dpi = 300, width = 15, height = 12)
ggsave('plot_ioi_seq.png', plot = plot_ioi_seq, dpi = 300, width = 15, height = 4)
####################################
# Velocity
####################################
# Create a dataframe for a velocity profile
df_velocity <- df %>% dplyr::filter(Key_OnOff == 1)
df_velocity$Acc <- diff(c(0, df_velocity$Velocity))
# Assign a sequence number for each tone
df_velocity$Note <- rep(1:51, length(df_velocity$NoteNr)/51)
# Remove irrelevant tones
df_analysis2 <- df_velocity %>% dplyr::filter(Note != 25 & Note != 26 & Note != 51)
# Descriptive stats
velocity <- aggregate(Velocity~Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_seq <- aggregate(Velocity~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
velocity_acc_seq <- aggregate(Acc~Note*Condition*Skill, data = df_analysis2, FUN = function(x){c(N = length(x), mean = mean(x),
sd = sd(x), sem = sd(x)/sqrt(length(x)))})
# Aggregated data
velocity <- cbind(velocity, as.data.frame(velocity[,3]))
velocity_seq <- cbind(velocity_seq, as.data.frame(velocity_seq[,4]))
velocity_acc_seq <- cbind(velocity_acc_seq, as.data.frame(velocity_acc_seq[,4]))
# Add a grouping name
for (i in 1:length(ls_grouping[[1]])){
for (j in 1:length(ls_grouping[[2]])){
velocity_seq$Grouping[velocity_seq$Condition == ls_grouping[[1]][i] & velocity_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
velocity_acc_seq$Grouping[velocity_acc_seq$Condition == ls_grouping[[1]][i] & velocity_acc_seq$Skill == ls_grouping[[2]][j]] <- paste(ls_grouping[[1]][i], '-', ls_grouping[[2]][j], sep = '')
}
}
####################################
# Velocity plots
####################################
plot_velocity <- ggplot(data = velocity, aes(x = Condition, y = mean, fill = Skill)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem),
width=.2, position=position_dodge(.9)) + labs(y = "Velocity")
plot_velocity_seq <- ggplot(data = velocity_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping, colour = Grouping)) +
geom_line() +
geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
plot_velocity_acc_seq <- ggplot(data = velocity_acc_seq, aes(x = Note, y = mean, group = Grouping, shape = Grouping, colour = Grouping)) +
geom_line() + geom_point() +
geom_errorbar(aes(ymin = mean - sem, ymax = mean + sem), width=.2,
position=position_dodge(0.05)) +
labs(y = "Velocity") + scale_x_continuous(breaks=seq(1,50,1))
ggsave('plot_velocity.png', plot = plot_velocity, dpi = 300, width = 15, height = 12)
ggsave('plot_velocity_seq.png', plot = plot_velocity_seq, dpi = 300, width = 15, height = 4)
ggsave('plot_velocity_acc_seq.png', plot = plot_velocity_acc_seq, dpi = 300, width = 15, height = 4)
####################################
# Articulation values
####################################
####################################
# Articulation plots
####################################
